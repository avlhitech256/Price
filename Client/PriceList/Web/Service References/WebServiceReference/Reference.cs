//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web.WebServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityInfo", Namespace="http://schemas.datacontract.org/2004/07/PricelistService.Service.Contract")]
    [System.SerializableAttribute()]
    public partial class SecurityInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OSLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OSVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset TimeRequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeSecurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkstationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OSLogin {
            get {
                return this.OSLoginField;
            }
            set {
                if ((object.ReferenceEquals(this.OSLoginField, value) != true)) {
                    this.OSLoginField = value;
                    this.RaisePropertyChanged("OSLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OSVersion {
            get {
                return this.OSVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.OSVersionField, value) != true)) {
                    this.OSVersionField = value;
                    this.RaisePropertyChanged("OSVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset TimeRequest {
            get {
                return this.TimeRequestField;
            }
            set {
                if ((this.TimeRequestField.Equals(value) != true)) {
                    this.TimeRequestField = value;
                    this.RaisePropertyChanged("TimeRequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeSecurity {
            get {
                return this.TypeSecurityField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeSecurityField, value) != true)) {
                    this.TypeSecurityField = value;
                    this.RaisePropertyChanged("TypeSecurity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Workstation {
            get {
                return this.WorkstationField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkstationField, value) != true)) {
                    this.WorkstationField = value;
                    this.RaisePropertyChanged("Workstation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyInfo", Namespace="http://schemas.datacontract.org/2004/07/PricelistService.Service.Contract")]
    [System.SerializableAttribute()]
    public partial class CompanyInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAuthorizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset TimeRequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset TimeResponceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebSiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMail {
            get {
                return this.EMailField;
            }
            set {
                if ((object.ReferenceEquals(this.EMailField, value) != true)) {
                    this.EMailField = value;
                    this.RaisePropertyChanged("EMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuthorized {
            get {
                return this.IsAuthorizedField;
            }
            set {
                if ((this.IsAuthorizedField.Equals(value) != true)) {
                    this.IsAuthorizedField = value;
                    this.RaisePropertyChanged("IsAuthorized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset TimeRequest {
            get {
                return this.TimeRequestField;
            }
            set {
                if ((this.TimeRequestField.Equals(value) != true)) {
                    this.TimeRequestField = value;
                    this.RaisePropertyChanged("TimeRequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset TimeResponce {
            get {
                return this.TimeResponceField;
            }
            set {
                if ((this.TimeResponceField.Equals(value) != true)) {
                    this.TimeResponceField = value;
                    this.RaisePropertyChanged("TimeResponce");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebSite {
            get {
                return this.WebSiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebSiteField, value) != true)) {
                    this.WebSiteField = value;
                    this.RaisePropertyChanged("WebSite");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShortcutInfo", Namespace="http://schemas.datacontract.org/2004/07/PricelistService.Service.Contract")]
    [System.SerializableAttribute()]
    public partial class ShortcutInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset RequestTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset ResponceTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset RequestTime {
            get {
                return this.RequestTimeField;
            }
            set {
                if ((this.RequestTimeField.Equals(value) != true)) {
                    this.RequestTimeField = value;
                    this.RaisePropertyChanged("RequestTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset ResponceTime {
            get {
                return this.ResponceTimeField;
            }
            set {
                if ((this.ResponceTimeField.Equals(value) != true)) {
                    this.ResponceTimeField = value;
                    this.RaisePropertyChanged("ResponceTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountInfo", Namespace="http://schemas.datacontract.org/2004/07/PricelistService.Service.Contract")]
    [System.SerializableAttribute()]
    public partial class CountInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CountBrandsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CountCatalogsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CountDirectoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CountPhotosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CountProductDirectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAuthorizedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CountBrands {
            get {
                return this.CountBrandsField;
            }
            set {
                if ((this.CountBrandsField.Equals(value) != true)) {
                    this.CountBrandsField = value;
                    this.RaisePropertyChanged("CountBrands");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CountCatalogs {
            get {
                return this.CountCatalogsField;
            }
            set {
                if ((this.CountCatalogsField.Equals(value) != true)) {
                    this.CountCatalogsField = value;
                    this.RaisePropertyChanged("CountCatalogs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CountDirectories {
            get {
                return this.CountDirectoriesField;
            }
            set {
                if ((this.CountDirectoriesField.Equals(value) != true)) {
                    this.CountDirectoriesField = value;
                    this.RaisePropertyChanged("CountDirectories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CountPhotos {
            get {
                return this.CountPhotosField;
            }
            set {
                if ((this.CountPhotosField.Equals(value) != true)) {
                    this.CountPhotosField = value;
                    this.RaisePropertyChanged("CountPhotos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CountProductDirections {
            get {
                return this.CountProductDirectionsField;
            }
            set {
                if ((this.CountProductDirectionsField.Equals(value) != true)) {
                    this.CountProductDirectionsField = value;
                    this.RaisePropertyChanged("CountProductDirections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuthorized {
            get {
                return this.IsAuthorizedField;
            }
            set {
                if ((this.IsAuthorizedField.Equals(value) != true)) {
                    this.IsAuthorizedField = value;
                    this.RaisePropertyChanged("IsAuthorized");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BrandInfo", Namespace="http://schemas.datacontract.org/2004/07/PricelistService.Service.Contract")]
    [System.SerializableAttribute()]
    public partial class BrandInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] CatalogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset DateOfCreationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset ForceUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAuthorizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset LastUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] CatalogId {
            get {
                return this.CatalogIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIdField, value) != true)) {
                    this.CatalogIdField = value;
                    this.RaisePropertyChanged("CatalogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset DateOfCreation {
            get {
                return this.DateOfCreationField;
            }
            set {
                if ((this.DateOfCreationField.Equals(value) != true)) {
                    this.DateOfCreationField = value;
                    this.RaisePropertyChanged("DateOfCreation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset ForceUpdated {
            get {
                return this.ForceUpdatedField;
            }
            set {
                if ((this.ForceUpdatedField.Equals(value) != true)) {
                    this.ForceUpdatedField = value;
                    this.RaisePropertyChanged("ForceUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuthorized {
            get {
                return this.IsAuthorizedField;
            }
            set {
                if ((this.IsAuthorizedField.Equals(value) != true)) {
                    this.IsAuthorizedField = value;
                    this.RaisePropertyChanged("IsAuthorized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Brands", Namespace="http://schemas.datacontract.org/2004/07/PricelistService.Service.Contract")]
    [System.SerializableAttribute()]
    public partial class Brands : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAuthorizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.WebServiceReference.BrandInfo[] ItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuthorized {
            get {
                return this.IsAuthorizedField;
            }
            set {
                if ((this.IsAuthorizedField.Equals(value) != true)) {
                    this.IsAuthorizedField = value;
                    this.RaisePropertyChanged("IsAuthorized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.WebServiceReference.BrandInfo[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatalogInfo", Namespace="http://schemas.datacontract.org/2004/07/PricelistService.Service.Contract")]
    [System.SerializableAttribute()]
    public partial class CatalogInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BatchOfSalesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BrandIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset DateOfCreationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DirectoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnterpriceNormPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset ForceUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasPhotosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAuthorizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset LastUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset LastUpdatedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MultiplicityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] PhotosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.WebServiceReference.CatalogItemStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Article {
            get {
                return this.ArticleField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleField, value) != true)) {
                    this.ArticleField = value;
                    this.RaisePropertyChanged("Article");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((object.ReferenceEquals(this.BalanceField, value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BatchOfSales {
            get {
                return this.BatchOfSalesField;
            }
            set {
                if ((this.BatchOfSalesField.Equals(value) != true)) {
                    this.BatchOfSalesField = value;
                    this.RaisePropertyChanged("BatchOfSales");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BrandId {
            get {
                return this.BrandIdField;
            }
            set {
                if ((this.BrandIdField.Equals(value) != true)) {
                    this.BrandIdField = value;
                    this.RaisePropertyChanged("BrandId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandName {
            get {
                return this.BrandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandNameField, value) != true)) {
                    this.BrandNameField = value;
                    this.RaisePropertyChanged("BrandName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset DateOfCreation {
            get {
                return this.DateOfCreationField;
            }
            set {
                if ((this.DateOfCreationField.Equals(value) != true)) {
                    this.DateOfCreationField = value;
                    this.RaisePropertyChanged("DateOfCreation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DirectoryId {
            get {
                return this.DirectoryIdField;
            }
            set {
                if ((this.DirectoryIdField.Equals(value) != true)) {
                    this.DirectoryIdField = value;
                    this.RaisePropertyChanged("DirectoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterpriceNormPack {
            get {
                return this.EnterpriceNormPackField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterpriceNormPackField, value) != true)) {
                    this.EnterpriceNormPackField = value;
                    this.RaisePropertyChanged("EnterpriceNormPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset ForceUpdated {
            get {
                return this.ForceUpdatedField;
            }
            set {
                if ((this.ForceUpdatedField.Equals(value) != true)) {
                    this.ForceUpdatedField = value;
                    this.RaisePropertyChanged("ForceUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasPhotos {
            get {
                return this.HasPhotosField;
            }
            set {
                if ((this.HasPhotosField.Equals(value) != true)) {
                    this.HasPhotosField = value;
                    this.RaisePropertyChanged("HasPhotos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuthorized {
            get {
                return this.IsAuthorizedField;
            }
            set {
                if ((this.IsAuthorizedField.Equals(value) != true)) {
                    this.IsAuthorizedField = value;
                    this.RaisePropertyChanged("IsAuthorized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset LastUpdatedStatus {
            get {
                return this.LastUpdatedStatusField;
            }
            set {
                if ((this.LastUpdatedStatusField.Equals(value) != true)) {
                    this.LastUpdatedStatusField = value;
                    this.RaisePropertyChanged("LastUpdatedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Multiplicity {
            get {
                return this.MultiplicityField;
            }
            set {
                if ((this.MultiplicityField.Equals(value) != true)) {
                    this.MultiplicityField = value;
                    this.RaisePropertyChanged("Multiplicity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] Photos {
            get {
                return this.PhotosField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotosField, value) != true)) {
                    this.PhotosField = value;
                    this.RaisePropertyChanged("Photos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.WebServiceReference.CatalogItemStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UID {
            get {
                return this.UIDField;
            }
            set {
                if ((this.UIDField.Equals(value) != true)) {
                    this.UIDField = value;
                    this.RaisePropertyChanged("UID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatalogItemStatus", Namespace="http://schemas.datacontract.org/2004/07/Common.Data.Enum")]
    public enum CatalogItemStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Old = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        New = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceIsUp = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceIsDown = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Catalogs", Namespace="http://schemas.datacontract.org/2004/07/PricelistService.Service.Contract")]
    [System.SerializableAttribute()]
    public partial class Catalogs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAuthorizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.WebServiceReference.CatalogInfo[] ItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuthorized {
            get {
                return this.IsAuthorizedField;
            }
            set {
                if ((this.IsAuthorizedField.Equals(value) != true)) {
                    this.IsAuthorizedField = value;
                    this.RaisePropertyChanged("IsAuthorized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.WebServiceReference.CatalogInfo[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DirectoryInfo", Namespace="http://schemas.datacontract.org/2004/07/PricelistService.Service.Contract")]
    [System.SerializableAttribute()]
    public partial class DirectoryInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] CatalogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset DateOfCreationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset ForceUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAuthorizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset LastUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] SubDirectoryIdsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] CatalogId {
            get {
                return this.CatalogIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIdField, value) != true)) {
                    this.CatalogIdField = value;
                    this.RaisePropertyChanged("CatalogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset DateOfCreation {
            get {
                return this.DateOfCreationField;
            }
            set {
                if ((this.DateOfCreationField.Equals(value) != true)) {
                    this.DateOfCreationField = value;
                    this.RaisePropertyChanged("DateOfCreation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset ForceUpdated {
            get {
                return this.ForceUpdatedField;
            }
            set {
                if ((this.ForceUpdatedField.Equals(value) != true)) {
                    this.ForceUpdatedField = value;
                    this.RaisePropertyChanged("ForceUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuthorized {
            get {
                return this.IsAuthorizedField;
            }
            set {
                if ((this.IsAuthorizedField.Equals(value) != true)) {
                    this.IsAuthorizedField = value;
                    this.RaisePropertyChanged("IsAuthorized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Parent {
            get {
                return this.ParentField;
            }
            set {
                if ((this.ParentField.Equals(value) != true)) {
                    this.ParentField = value;
                    this.RaisePropertyChanged("Parent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] SubDirectoryIds {
            get {
                return this.SubDirectoryIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.SubDirectoryIdsField, value) != true)) {
                    this.SubDirectoryIdsField = value;
                    this.RaisePropertyChanged("SubDirectoryIds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Directories", Namespace="http://schemas.datacontract.org/2004/07/PricelistService.Service.Contract")]
    [System.SerializableAttribute()]
    public partial class Directories : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAuthorizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.WebServiceReference.DirectoryInfo[] ItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuthorized {
            get {
                return this.IsAuthorizedField;
            }
            set {
                if ((this.IsAuthorizedField.Equals(value) != true)) {
                    this.IsAuthorizedField = value;
                    this.RaisePropertyChanged("IsAuthorized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.WebServiceReference.DirectoryInfo[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhotoInfo", Namespace="http://schemas.datacontract.org/2004/07/PricelistService.Service.Contract")]
    [System.SerializableAttribute()]
    public partial class PhotoInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CatalogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset DateOfCreationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset ForceUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAuthorizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLoadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset LastUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PhotoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CatalogId {
            get {
                return this.CatalogIdField;
            }
            set {
                if ((this.CatalogIdField.Equals(value) != true)) {
                    this.CatalogIdField = value;
                    this.RaisePropertyChanged("CatalogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset DateOfCreation {
            get {
                return this.DateOfCreationField;
            }
            set {
                if ((this.DateOfCreationField.Equals(value) != true)) {
                    this.DateOfCreationField = value;
                    this.RaisePropertyChanged("DateOfCreation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset ForceUpdated {
            get {
                return this.ForceUpdatedField;
            }
            set {
                if ((this.ForceUpdatedField.Equals(value) != true)) {
                    this.ForceUpdatedField = value;
                    this.RaisePropertyChanged("ForceUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuthorized {
            get {
                return this.IsAuthorizedField;
            }
            set {
                if ((this.IsAuthorizedField.Equals(value) != true)) {
                    this.IsAuthorizedField = value;
                    this.RaisePropertyChanged("IsAuthorized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLoad {
            get {
                return this.IsLoadField;
            }
            set {
                if ((this.IsLoadField.Equals(value) != true)) {
                    this.IsLoadField = value;
                    this.RaisePropertyChanged("IsLoad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Photos", Namespace="http://schemas.datacontract.org/2004/07/PricelistService.Service.Contract")]
    [System.SerializableAttribute()]
    public partial class Photos : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAuthorizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.WebServiceReference.PhotoInfo[] ItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuthorized {
            get {
                return this.IsAuthorizedField;
            }
            set {
                if ((this.IsAuthorizedField.Equals(value) != true)) {
                    this.IsAuthorizedField = value;
                    this.RaisePropertyChanged("IsAuthorized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.WebServiceReference.PhotoInfo[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductDirectionInfo", Namespace="http://schemas.datacontract.org/2004/07/PricelistService.Service.Contract")]
    [System.SerializableAttribute()]
    public partial class ProductDirectionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset DateOfCreationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.WebServiceReference.CommodityDirection DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DirectoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset ForceUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAuthorizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset LastUpdatedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset DateOfCreation {
            get {
                return this.DateOfCreationField;
            }
            set {
                if ((this.DateOfCreationField.Equals(value) != true)) {
                    this.DateOfCreationField = value;
                    this.RaisePropertyChanged("DateOfCreation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.WebServiceReference.CommodityDirection Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DirectoryId {
            get {
                return this.DirectoryIdField;
            }
            set {
                if ((this.DirectoryIdField.Equals(value) != true)) {
                    this.DirectoryIdField = value;
                    this.RaisePropertyChanged("DirectoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset ForceUpdated {
            get {
                return this.ForceUpdatedField;
            }
            set {
                if ((this.ForceUpdatedField.Equals(value) != true)) {
                    this.ForceUpdatedField = value;
                    this.RaisePropertyChanged("ForceUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuthorized {
            get {
                return this.IsAuthorizedField;
            }
            set {
                if ((this.IsAuthorizedField.Equals(value) != true)) {
                    this.IsAuthorizedField = value;
                    this.RaisePropertyChanged("IsAuthorized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommodityDirection", Namespace="http://schemas.datacontract.org/2004/07/Common.Data.Enum")]
    public enum CommodityDirection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vaz = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gaz = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Zaz = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chemistry = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Battery = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gas = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Instrument = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Common = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductDirections", Namespace="http://schemas.datacontract.org/2004/07/PricelistService.Service.Contract")]
    [System.SerializableAttribute()]
    public partial class ProductDirections : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAuthorizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.WebServiceReference.ProductDirectionInfo[] ItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuthorized {
            get {
                return this.IsAuthorizedField;
            }
            set {
                if ((this.IsAuthorizedField.Equals(value) != true)) {
                    this.IsAuthorizedField = value;
                    this.RaisePropertyChanged("IsAuthorized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.WebServiceReference.ProductDirectionInfo[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebServiceReference.IPricelistService")]
    public interface IPricelistService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/Hello", ReplyAction="http://tempuri.org/IPricelistService/HelloResponse")]
        Web.WebServiceReference.CompanyInfo Hello(Web.WebServiceReference.SecurityInfo securityInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/Hello", ReplyAction="http://tempuri.org/IPricelistService/HelloResponse")]
        System.Threading.Tasks.Task<Web.WebServiceReference.CompanyInfo> HelloAsync(Web.WebServiceReference.SecurityInfo securityInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/Shortcut", ReplyAction="http://tempuri.org/IPricelistService/ShortcutResponse")]
        Web.WebServiceReference.ShortcutInfo Shortcut(long id, System.DateTimeOffset requestTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/Shortcut", ReplyAction="http://tempuri.org/IPricelistService/ShortcutResponse")]
        System.Threading.Tasks.Task<Web.WebServiceReference.ShortcutInfo> ShortcutAsync(long id, System.DateTimeOffset requestTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/ChangePasswodr", ReplyAction="http://tempuri.org/IPricelistService/ChangePasswodrResponse")]
        bool ChangePasswodr(Web.WebServiceReference.SecurityInfo securityInfo, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/ChangePasswodr", ReplyAction="http://tempuri.org/IPricelistService/ChangePasswodrResponse")]
        System.Threading.Tasks.Task<bool> ChangePasswodrAsync(Web.WebServiceReference.SecurityInfo securityInfo, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/PrepareToUpdate", ReplyAction="http://tempuri.org/IPricelistService/PrepareToUpdateResponse")]
        Web.WebServiceReference.CountInfo PrepareToUpdate(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdateBrands, System.DateTimeOffset lastUpdateCatalogs, System.DateTimeOffset lastUpdateDirectories, System.DateTimeOffset lastUpdateProductDirections, System.DateTimeOffset lastUpdatePhotos, bool needLoadPhotos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/PrepareToUpdate", ReplyAction="http://tempuri.org/IPricelistService/PrepareToUpdateResponse")]
        System.Threading.Tasks.Task<Web.WebServiceReference.CountInfo> PrepareToUpdateAsync(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdateBrands, System.DateTimeOffset lastUpdateCatalogs, System.DateTimeOffset lastUpdateDirectories, System.DateTimeOffset lastUpdateProductDirections, System.DateTimeOffset lastUpdatePhotos, bool needLoadPhotos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/GetBrand", ReplyAction="http://tempuri.org/IPricelistService/GetBrandResponse")]
        Web.WebServiceReference.BrandInfo GetBrand(Web.WebServiceReference.SecurityInfo securityInfo, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/GetBrand", ReplyAction="http://tempuri.org/IPricelistService/GetBrandResponse")]
        System.Threading.Tasks.Task<Web.WebServiceReference.BrandInfo> GetBrandAsync(Web.WebServiceReference.SecurityInfo securityInfo, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/GetBrands", ReplyAction="http://tempuri.org/IPricelistService/GetBrandsResponse")]
        Web.WebServiceReference.Brands GetBrands(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/GetBrands", ReplyAction="http://tempuri.org/IPricelistService/GetBrandsResponse")]
        System.Threading.Tasks.Task<Web.WebServiceReference.Brands> GetBrandsAsync(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/ConfirmUpdateBrands", ReplyAction="http://tempuri.org/IPricelistService/ConfirmUpdateBrandsResponse")]
        void ConfirmUpdateBrands(Web.WebServiceReference.SecurityInfo securityInfo, long[] itemIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/ConfirmUpdateBrands", ReplyAction="http://tempuri.org/IPricelistService/ConfirmUpdateBrandsResponse")]
        System.Threading.Tasks.Task ConfirmUpdateBrandsAsync(Web.WebServiceReference.SecurityInfo securityInfo, long[] itemIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/GetCatalog", ReplyAction="http://tempuri.org/IPricelistService/GetCatalogResponse")]
        Web.WebServiceReference.CatalogInfo GetCatalog(Web.WebServiceReference.SecurityInfo securityInfo, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/GetCatalog", ReplyAction="http://tempuri.org/IPricelistService/GetCatalogResponse")]
        System.Threading.Tasks.Task<Web.WebServiceReference.CatalogInfo> GetCatalogAsync(Web.WebServiceReference.SecurityInfo securityInfo, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/GetCatalogs", ReplyAction="http://tempuri.org/IPricelistService/GetCatalogsResponse")]
        Web.WebServiceReference.Catalogs GetCatalogs(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/GetCatalogs", ReplyAction="http://tempuri.org/IPricelistService/GetCatalogsResponse")]
        System.Threading.Tasks.Task<Web.WebServiceReference.Catalogs> GetCatalogsAsync(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/ConfirmUpdateCatalogs", ReplyAction="http://tempuri.org/IPricelistService/ConfirmUpdateCatalogsResponse")]
        void ConfirmUpdateCatalogs(Web.WebServiceReference.SecurityInfo securityInfo, long[] itemIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/ConfirmUpdateCatalogs", ReplyAction="http://tempuri.org/IPricelistService/ConfirmUpdateCatalogsResponse")]
        System.Threading.Tasks.Task ConfirmUpdateCatalogsAsync(Web.WebServiceReference.SecurityInfo securityInfo, long[] itemIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/GetDirectory", ReplyAction="http://tempuri.org/IPricelistService/GetDirectoryResponse")]
        Web.WebServiceReference.DirectoryInfo GetDirectory(Web.WebServiceReference.SecurityInfo securityInfo, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/GetDirectory", ReplyAction="http://tempuri.org/IPricelistService/GetDirectoryResponse")]
        System.Threading.Tasks.Task<Web.WebServiceReference.DirectoryInfo> GetDirectoryAsync(Web.WebServiceReference.SecurityInfo securityInfo, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/GetDirectories", ReplyAction="http://tempuri.org/IPricelistService/GetDirectoriesResponse")]
        Web.WebServiceReference.Directories GetDirectories(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/GetDirectories", ReplyAction="http://tempuri.org/IPricelistService/GetDirectoriesResponse")]
        System.Threading.Tasks.Task<Web.WebServiceReference.Directories> GetDirectoriesAsync(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/ConfirmUpdateDirectories", ReplyAction="http://tempuri.org/IPricelistService/ConfirmUpdateDirectoriesResponse")]
        void ConfirmUpdateDirectories(Web.WebServiceReference.SecurityInfo securityInfo, long[] itemIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/ConfirmUpdateDirectories", ReplyAction="http://tempuri.org/IPricelistService/ConfirmUpdateDirectoriesResponse")]
        System.Threading.Tasks.Task ConfirmUpdateDirectoriesAsync(Web.WebServiceReference.SecurityInfo securityInfo, long[] itemIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/GetPhoto", ReplyAction="http://tempuri.org/IPricelistService/GetPhotoResponse")]
        Web.WebServiceReference.PhotoInfo GetPhoto(Web.WebServiceReference.SecurityInfo securityInfo, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/GetPhoto", ReplyAction="http://tempuri.org/IPricelistService/GetPhotoResponse")]
        System.Threading.Tasks.Task<Web.WebServiceReference.PhotoInfo> GetPhotoAsync(Web.WebServiceReference.SecurityInfo securityInfo, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/GetPhotos", ReplyAction="http://tempuri.org/IPricelistService/GetPhotosResponse")]
        Web.WebServiceReference.Photos GetPhotos(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/GetPhotos", ReplyAction="http://tempuri.org/IPricelistService/GetPhotosResponse")]
        System.Threading.Tasks.Task<Web.WebServiceReference.Photos> GetPhotosAsync(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/ConfirmUpdatePhotos", ReplyAction="http://tempuri.org/IPricelistService/ConfirmUpdatePhotosResponse")]
        void ConfirmUpdatePhotos(Web.WebServiceReference.SecurityInfo securityInfo, long[] itemIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/ConfirmUpdatePhotos", ReplyAction="http://tempuri.org/IPricelistService/ConfirmUpdatePhotosResponse")]
        System.Threading.Tasks.Task ConfirmUpdatePhotosAsync(Web.WebServiceReference.SecurityInfo securityInfo, long[] itemIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/GetProductDirection", ReplyAction="http://tempuri.org/IPricelistService/GetProductDirectionResponse")]
        Web.WebServiceReference.ProductDirectionInfo GetProductDirection(Web.WebServiceReference.SecurityInfo securityInfo, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/GetProductDirection", ReplyAction="http://tempuri.org/IPricelistService/GetProductDirectionResponse")]
        System.Threading.Tasks.Task<Web.WebServiceReference.ProductDirectionInfo> GetProductDirectionAsync(Web.WebServiceReference.SecurityInfo securityInfo, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/GetProductDirections", ReplyAction="http://tempuri.org/IPricelistService/GetProductDirectionsResponse")]
        Web.WebServiceReference.ProductDirections GetProductDirections(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/GetProductDirections", ReplyAction="http://tempuri.org/IPricelistService/GetProductDirectionsResponse")]
        System.Threading.Tasks.Task<Web.WebServiceReference.ProductDirections> GetProductDirectionsAsync(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/ConfirmUpdateProductDirections", ReplyAction="http://tempuri.org/IPricelistService/ConfirmUpdateProductDirectionsResponse")]
        void ConfirmUpdateProductDirections(Web.WebServiceReference.SecurityInfo securityInfo, long[] itemIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricelistService/ConfirmUpdateProductDirections", ReplyAction="http://tempuri.org/IPricelistService/ConfirmUpdateProductDirectionsResponse")]
        System.Threading.Tasks.Task ConfirmUpdateProductDirectionsAsync(Web.WebServiceReference.SecurityInfo securityInfo, long[] itemIds);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPricelistServiceChannel : Web.WebServiceReference.IPricelistService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PricelistServiceClient : System.ServiceModel.ClientBase<Web.WebServiceReference.IPricelistService>, Web.WebServiceReference.IPricelistService {
        
        public PricelistServiceClient() {
        }
        
        public PricelistServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PricelistServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PricelistServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PricelistServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Web.WebServiceReference.CompanyInfo Hello(Web.WebServiceReference.SecurityInfo securityInfo) {
            return base.Channel.Hello(securityInfo);
        }
        
        public System.Threading.Tasks.Task<Web.WebServiceReference.CompanyInfo> HelloAsync(Web.WebServiceReference.SecurityInfo securityInfo) {
            return base.Channel.HelloAsync(securityInfo);
        }
        
        public Web.WebServiceReference.ShortcutInfo Shortcut(long id, System.DateTimeOffset requestTime) {
            return base.Channel.Shortcut(id, requestTime);
        }
        
        public System.Threading.Tasks.Task<Web.WebServiceReference.ShortcutInfo> ShortcutAsync(long id, System.DateTimeOffset requestTime) {
            return base.Channel.ShortcutAsync(id, requestTime);
        }
        
        public bool ChangePasswodr(Web.WebServiceReference.SecurityInfo securityInfo, string newPassword) {
            return base.Channel.ChangePasswodr(securityInfo, newPassword);
        }
        
        public System.Threading.Tasks.Task<bool> ChangePasswodrAsync(Web.WebServiceReference.SecurityInfo securityInfo, string newPassword) {
            return base.Channel.ChangePasswodrAsync(securityInfo, newPassword);
        }
        
        public Web.WebServiceReference.CountInfo PrepareToUpdate(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdateBrands, System.DateTimeOffset lastUpdateCatalogs, System.DateTimeOffset lastUpdateDirectories, System.DateTimeOffset lastUpdateProductDirections, System.DateTimeOffset lastUpdatePhotos, bool needLoadPhotos) {
            return base.Channel.PrepareToUpdate(securityInfo, lastUpdateBrands, lastUpdateCatalogs, lastUpdateDirectories, lastUpdateProductDirections, lastUpdatePhotos, needLoadPhotos);
        }
        
        public System.Threading.Tasks.Task<Web.WebServiceReference.CountInfo> PrepareToUpdateAsync(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdateBrands, System.DateTimeOffset lastUpdateCatalogs, System.DateTimeOffset lastUpdateDirectories, System.DateTimeOffset lastUpdateProductDirections, System.DateTimeOffset lastUpdatePhotos, bool needLoadPhotos) {
            return base.Channel.PrepareToUpdateAsync(securityInfo, lastUpdateBrands, lastUpdateCatalogs, lastUpdateDirectories, lastUpdateProductDirections, lastUpdatePhotos, needLoadPhotos);
        }
        
        public Web.WebServiceReference.BrandInfo GetBrand(Web.WebServiceReference.SecurityInfo securityInfo, long id) {
            return base.Channel.GetBrand(securityInfo, id);
        }
        
        public System.Threading.Tasks.Task<Web.WebServiceReference.BrandInfo> GetBrandAsync(Web.WebServiceReference.SecurityInfo securityInfo, long id) {
            return base.Channel.GetBrandAsync(securityInfo, id);
        }
        
        public Web.WebServiceReference.Brands GetBrands(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdate) {
            return base.Channel.GetBrands(securityInfo, lastUpdate);
        }
        
        public System.Threading.Tasks.Task<Web.WebServiceReference.Brands> GetBrandsAsync(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdate) {
            return base.Channel.GetBrandsAsync(securityInfo, lastUpdate);
        }
        
        public void ConfirmUpdateBrands(Web.WebServiceReference.SecurityInfo securityInfo, long[] itemIds) {
            base.Channel.ConfirmUpdateBrands(securityInfo, itemIds);
        }
        
        public System.Threading.Tasks.Task ConfirmUpdateBrandsAsync(Web.WebServiceReference.SecurityInfo securityInfo, long[] itemIds) {
            return base.Channel.ConfirmUpdateBrandsAsync(securityInfo, itemIds);
        }
        
        public Web.WebServiceReference.CatalogInfo GetCatalog(Web.WebServiceReference.SecurityInfo securityInfo, long id) {
            return base.Channel.GetCatalog(securityInfo, id);
        }
        
        public System.Threading.Tasks.Task<Web.WebServiceReference.CatalogInfo> GetCatalogAsync(Web.WebServiceReference.SecurityInfo securityInfo, long id) {
            return base.Channel.GetCatalogAsync(securityInfo, id);
        }
        
        public Web.WebServiceReference.Catalogs GetCatalogs(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdate) {
            return base.Channel.GetCatalogs(securityInfo, lastUpdate);
        }
        
        public System.Threading.Tasks.Task<Web.WebServiceReference.Catalogs> GetCatalogsAsync(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdate) {
            return base.Channel.GetCatalogsAsync(securityInfo, lastUpdate);
        }
        
        public void ConfirmUpdateCatalogs(Web.WebServiceReference.SecurityInfo securityInfo, long[] itemIds) {
            base.Channel.ConfirmUpdateCatalogs(securityInfo, itemIds);
        }
        
        public System.Threading.Tasks.Task ConfirmUpdateCatalogsAsync(Web.WebServiceReference.SecurityInfo securityInfo, long[] itemIds) {
            return base.Channel.ConfirmUpdateCatalogsAsync(securityInfo, itemIds);
        }
        
        public Web.WebServiceReference.DirectoryInfo GetDirectory(Web.WebServiceReference.SecurityInfo securityInfo, long id) {
            return base.Channel.GetDirectory(securityInfo, id);
        }
        
        public System.Threading.Tasks.Task<Web.WebServiceReference.DirectoryInfo> GetDirectoryAsync(Web.WebServiceReference.SecurityInfo securityInfo, long id) {
            return base.Channel.GetDirectoryAsync(securityInfo, id);
        }
        
        public Web.WebServiceReference.Directories GetDirectories(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdate) {
            return base.Channel.GetDirectories(securityInfo, lastUpdate);
        }
        
        public System.Threading.Tasks.Task<Web.WebServiceReference.Directories> GetDirectoriesAsync(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdate) {
            return base.Channel.GetDirectoriesAsync(securityInfo, lastUpdate);
        }
        
        public void ConfirmUpdateDirectories(Web.WebServiceReference.SecurityInfo securityInfo, long[] itemIds) {
            base.Channel.ConfirmUpdateDirectories(securityInfo, itemIds);
        }
        
        public System.Threading.Tasks.Task ConfirmUpdateDirectoriesAsync(Web.WebServiceReference.SecurityInfo securityInfo, long[] itemIds) {
            return base.Channel.ConfirmUpdateDirectoriesAsync(securityInfo, itemIds);
        }
        
        public Web.WebServiceReference.PhotoInfo GetPhoto(Web.WebServiceReference.SecurityInfo securityInfo, long id) {
            return base.Channel.GetPhoto(securityInfo, id);
        }
        
        public System.Threading.Tasks.Task<Web.WebServiceReference.PhotoInfo> GetPhotoAsync(Web.WebServiceReference.SecurityInfo securityInfo, long id) {
            return base.Channel.GetPhotoAsync(securityInfo, id);
        }
        
        public Web.WebServiceReference.Photos GetPhotos(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdate) {
            return base.Channel.GetPhotos(securityInfo, lastUpdate);
        }
        
        public System.Threading.Tasks.Task<Web.WebServiceReference.Photos> GetPhotosAsync(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdate) {
            return base.Channel.GetPhotosAsync(securityInfo, lastUpdate);
        }
        
        public void ConfirmUpdatePhotos(Web.WebServiceReference.SecurityInfo securityInfo, long[] itemIds) {
            base.Channel.ConfirmUpdatePhotos(securityInfo, itemIds);
        }
        
        public System.Threading.Tasks.Task ConfirmUpdatePhotosAsync(Web.WebServiceReference.SecurityInfo securityInfo, long[] itemIds) {
            return base.Channel.ConfirmUpdatePhotosAsync(securityInfo, itemIds);
        }
        
        public Web.WebServiceReference.ProductDirectionInfo GetProductDirection(Web.WebServiceReference.SecurityInfo securityInfo, long id) {
            return base.Channel.GetProductDirection(securityInfo, id);
        }
        
        public System.Threading.Tasks.Task<Web.WebServiceReference.ProductDirectionInfo> GetProductDirectionAsync(Web.WebServiceReference.SecurityInfo securityInfo, long id) {
            return base.Channel.GetProductDirectionAsync(securityInfo, id);
        }
        
        public Web.WebServiceReference.ProductDirections GetProductDirections(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdate) {
            return base.Channel.GetProductDirections(securityInfo, lastUpdate);
        }
        
        public System.Threading.Tasks.Task<Web.WebServiceReference.ProductDirections> GetProductDirectionsAsync(Web.WebServiceReference.SecurityInfo securityInfo, System.DateTimeOffset lastUpdate) {
            return base.Channel.GetProductDirectionsAsync(securityInfo, lastUpdate);
        }
        
        public void ConfirmUpdateProductDirections(Web.WebServiceReference.SecurityInfo securityInfo, long[] itemIds) {
            base.Channel.ConfirmUpdateProductDirections(securityInfo, itemIds);
        }
        
        public System.Threading.Tasks.Task ConfirmUpdateProductDirectionsAsync(Web.WebServiceReference.SecurityInfo securityInfo, long[] itemIds) {
            return base.Channel.ConfirmUpdateProductDirectionsAsync(securityInfo, itemIds);
        }
    }
}
